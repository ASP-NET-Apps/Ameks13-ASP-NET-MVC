@model MyWoodenHouse.Client.Web.Areas.Administration.ViewModels.PageCompleteVm

@{
    Layout = null;
}

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "mainForm" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <table class="table form-horizontal" style="margin-top:20px;">
        <colgroup>
            <col class="col-md-3">
            <col class="col-md-9">
        </colgroup>
        <tbody class="form-group">
            <tr>
                <th style="background-color:lightsteelblue; color: white;">
                    @Html.DisplayNameFor(model => model.ModelName)
                </th>
                <th style="background-color:lightsteelblue;"></th>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label pull-right" })
                </td>
                <td>
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                </td>
            </tr>

            <tr>
                <td>
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label pull-right" })
                </td>
                <td>
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                </td>
            </tr>

            <tr>
                <td>
                    @Html.LabelFor(model => model.HtmlContent, htmlAttributes: new { @class = "control-label pull-right" })
                </td>
                <td>
                    @Html.ValidationMessageFor(model => model.HtmlContent, "", new { @class = "text-danger" })
                    @Html.TextAreaFor(model => model.HtmlContent, new { htmlAttributes = new { @class = "form-control ckeditor" } })
                    <textarea name="editor1" id="editor1" rows="10" cols="80">
                        This is my textarea to be replaced with CKEditor.
                    </textarea>
                    <script>
                        // Replace the <textarea id="editor1"> with a CKEditor
                        // instance, using default configuration.
                        CKEDITOR.replace('HtmlContent');
                    </script>

                </td>
            </tr>

            <tr>
                <td>
                    @Html.LabelFor(model => model.LanguageCultureName, htmlAttributes: new { @class = "control-label pull-right" })
                </td>
                <td>
                    @Html.ValidationMessageFor(model => model.LanguageCultureName, "", new { @class = "text-danger" })
                    @Html.EditorFor(model => model.LanguageCultureName, new { htmlAttributes = new { @class = "form-control" } })
                </td>
            </tr>

            <tr>
                <td style="background-color:lightsteelblue"></td>
                <td style="background-color:lightsteelblue">
                    <button type="reset"
                            id="resetButton"
                            onclick="location.href='@Url.Action("Index","Pages")'"
                            class="btn btn-default">
                        <span class="glyphicon glyphicon-remove"></span>
                        Cancel
                    </button>
                    <button type="submit"
                            id="saveButton"
                            value="Create"
                            onclick="location.href='@Url.Action("Create","Pages")'"
                            class="btn btn-default disabled">
                        <span class="glyphicon glyphicon-floppy-save"></span>
                        Save
                    </button>
                </td>
            </tr>
        </tbody>
    </table>
}

@Scripts.Render("~/bundles/jquery")
@*@Scripts.Render("~/bundles/jqueryval")*@

<script type="text/javascript">

        function enableSaveButton(){
            var saveButton = $('#saveButton');

            saveButton.removeClass('disabled');
            saveButton.removeClass('btn-default');
            saveButton.addClass('enabled');
            saveButton.addClass('btn-primary');
        }

        function disableSaveButton(){
            var saveButton = $('#saveButton');
            saveButton.removeClass('enabled')
            saveButton.removeClass('btn-primary')
            saveButton.addClass('disabled');
            saveButton.addClass('btn-default');
        }

        function validateForm() {
            var mainForm = $('#mainForm');
            var validator = mainForm.validate();
            validator.form();

            if (mainForm.valid()) {
                console.log(mainForm.valid());
                enableSaveButton();
            } else {
                console.log(mainForm.valid());
                disableSaveButton();
            }
        }

        $(document).ready(function () {
            $('#Name').on("input", function () {
                validateForm();
            });
        });
        $(document).ready(function () {
            $('#Description').on("input", function () {
                validateForm();
            });
        });
        $(document).ready(function () {
            $('#HtmlContent').on("input", function () {
                validateForm();
            });
        });
        $(document).ready(function () {
            $('#LanguageCultureName').on("input", function () {
                validateForm();
            });
        });

</script>
