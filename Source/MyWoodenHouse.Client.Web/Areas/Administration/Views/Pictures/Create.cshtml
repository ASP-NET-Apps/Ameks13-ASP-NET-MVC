@model MyWoodenHouse.Client.Web.Areas.Administration.ViewModels.Pictures.PictureCompleteVm

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>
</head>
<body>
  
    <div class="container">
        <div class="row" style="margin-top: 20px;">
            <div class="col-md-2">
                <a href="@Url.Action("Index", "Pictures", new { area="Administration" })" class="btn btn-default">
                    <span class="glyphicon glyphicon-backward" aria-hidden="true"></span>
                    Pictures
                </a>
            </div>
            <div class="col-md-6">
                <h2 class="red-fg">Add picture</h2>
            </div>
        </div>
        <div class="row">
            <div class="col-md-8">

        @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "createForm" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <table class="table form-horizontal" style="margin-top:20px;">
                <colgroup>
                    <col class="col-md-3">
                    <col class="col-md-9">
                </colgroup>
                <tbody class="form-group">
                    <tr>
                        <th style="background-color:lightsteelblue; color: white;">
                            @Html.DisplayNameFor(model => model.ModelName)
                        </th>
                        <th style="background-color:lightsteelblue;"></th>
                    </tr>
                    <tr>
                        <td>
                            @Html.LabelFor(model => model.Url, htmlAttributes: new { @class = "control-label pull-right" })
                        </td>
                        <td>
                            @Html.ValidationMessageFor(model => model.Url, "", new { @class = "text-danger" })
                            @*@Html.TextBoxFor(model => model.Url, new { htmlAttributes = new { @class = "form-control" }, @onchange = "OnChangeUrl(this)" })*@
                            @Html.EditorFor(model => model.Url, new { htmlAttributes = new { @class = "form-control" }})
                        </td>
                    </tr>

                    <tr>
                        <td>
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label pull-right" })
                        </td>
                        <td>
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        </td>
                    </tr>
                    <tr>
                        <td></td>
                        <td>
                            <img id="previewImg"/>
                        </td>
                    </tr>

                    <tr>
                        <td style="background-color:lightsteelblue"></td>
                        <td style="background-color:lightsteelblue">
                            <button type="reset"
                                    id="resetButton"
                                    onclick="location.href='@Url.Action("Index","Pictures")'"
                                    class="btn btn-default">
                                <span class="glyphicon glyphicon-remove"></span>
                                Cancel
                            </button>
                            <button type="submit"
                                    id="saveButton"
                                    value="Create"
                                    onclick="location.href='@Url.Action("Create","Pictures")'"
                                    class="btn btn-default disabled">
                                <span class="glyphicon glyphicon-floppy-save"></span>
                                Save
                            </button>
                        </td>
                    </tr>
                </tbody>
            </table>
        }
            </div>
        </div>
    </div>

    @Scripts.Render("~/bundles/jquery")
    @*@Scripts.Render("~/bundles/jqueryval")*@

    <script type="text/javascript">

        //function OnChangeUrl(evt) {
        //    alert(evt.value);
        //    var val = $('#Url').val();
        //    $('#previewImg').attr('src', val).attr('height', '100px');
        //}
        $('#Url').change(function (evt) {
            // alert(evt.target.value);
            $('#previewImg').attr('src', evt.target.value).attr('height', '100px');
        });


        function enableSaveButton(){
            var saveButton = $('#saveButton');

            saveButton.removeClass('disabled');
            saveButton.removeClass('btn-default');
            saveButton.addClass('enabled');
            saveButton.addClass('btn-primary');
        }

        function disableSaveButton(){
            var saveButton = $('#saveButton');
            saveButton.removeClass('enabled')
            saveButton.removeClass('btn-primary')
            saveButton.addClass('disabled');
            saveButton.addClass('btn-default');
        }

        function validateForm() {
            var createForm = $('#createForm');
            var validator = createForm.validate();
            validator.form();

            if (createForm.valid()) {
                console.log(createForm.valid());
                enableSaveButton();
            } else {
                console.log(createForm.valid());
                disableSaveButton();
            }
        }

        $(document).ready(function () {
            $('#Name').on("input", function () {
                validateForm();
            });
            $('#Url').on("input", function () {
                validateForm();
            });
        });

    </script>
</body>
</html>
